{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","React","memo","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","findMovie","title","a","fetch","response","json","undefined","Error","FindMovie","allMovie","onAddMovie","useState","currentMovie","setCurrentMovie","query","setQuery","findError","setFindError","addedToList","setAddedToList","findMovieButton","useCallback","then","catch","error","message","onSubmit","event","preventDefault","some","movi","htmlFor","type","id","value","onChange","target","placeholder","classnames","onClick","disabled","App","setMovies","addMovie","every","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2e5450c9.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ninterface Props {\n  movie: Movie;\n}\n\nexport const MovieCard: React.FC<Props> = React.memo(({ movie }) => {\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\" data-cy=\"card-image\">\n\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movie-title\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n});\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = React.memo(({ movies }) => {\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n});\n","export const findMovie = async (title: string): Promise<Movie> => {\n  const response = await fetch(`https://www.omdbapi.com/?apikey=dc81e642&t=${title}`);\n  const movie = await response.json();\n\n  if (movie.imdbID === undefined) {\n    throw new Error('Movie is undefined');\n  }\n\n  return movie;\n};\n","import React, { useState, useCallback } from 'react';\nimport classnames from 'classnames';\nimport { findMovie } from '../../api';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  allMovie: Movie[];\n  onAddMovie: (movie: Movie) => void;\n}\n\nexport const FindMovie: React.FC<Props> = ({ allMovie, onAddMovie }) => {\n  const [currentMovie, setCurrentMovie] = useState<Movie | null>(null);\n  const [query, setQuery] = useState('');\n  const [findError, setFindError] = useState(false);\n  const [addedToList, setAddedToList] = useState(false);\n\n  const findMovieButton = useCallback(() => {\n    findMovie(query)\n      .then(movie => setCurrentMovie(movie))\n      .catch(error => {\n        if (error.message === 'Movie is undefined') {\n          setFindError(true);\n        }\n      });\n  }, [query]);\n\n  const handleEventSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setFindError(false);\n    setCurrentMovie(null);\n    setQuery('');\n\n    if (currentMovie) {\n      onAddMovie(currentMovie);\n    }\n\n    if (allMovie.some(movi => movi.imdbID === currentMovie?.imdbID)) {\n      setAddedToList(true);\n    } else {\n      setAddedToList(false);\n    }\n  };\n\n  return (\n    <>\n      <form\n        onSubmit={handleEventSubmit}\n        className=\"find-movie\"\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Enter a movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              value={query}\n              onChange={(event) => {\n                setQuery(event.target.value);\n                setFindError(false);\n              }}\n              placeholder=\"Enter a title to search\"\n              className={classnames('input', {\n                'is-danger': findError,\n              })}\n            />\n          </div>\n\n          {findError && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              data-cy=\"find\"\n              onClick={() => findMovieButton()}\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              disabled={!currentMovie}\n              data-cy=\"add\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {currentMovie && (\n          <MovieCard movie={currentMovie} />\n        )}\n\n        {addedToList && (\n          <article className=\"message is-danger\">\n            <div className=\"message-header mb-3\">\n              Film has already been added to the list\n            </div>\n          </article>\n        )}\n      </div>\n    </>\n  );\n};\n","import { useState, useCallback } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = useCallback((movie: Movie) => {\n    if (movies.every(movi => movi.imdbID !== movie.imdbID)) {\n      setMovies(currentMovies => [...currentMovies, movie]);\n    }\n  }, [movies]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie allMovie={movies} onAddMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}